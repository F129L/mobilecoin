name: CI

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches:
      - master
      - main
      - develop
    paths-ignore:
    - '**.md'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  MC_TELEMETRY: 0

permissions:
  checks: write

jobs:
  fog-tests:
    runs-on: [self-hosted, Linux, large]
    container: mobilecoin/builder-install:v0.0.32

    strategy:
      matrix:
        num_runners: [3]
        runner_index: [1, 2, 3]
      # Run each shard to completion.
      fail-fast: false
    env:
      NUM_RUNNERS: ${{ matrix.num_runners }}
      RUNNER_INDEX: ${{ matrix.runner_index }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
      - name: List packages to test
        run: |
          cargo metadata --no-deps --format-version=1 | jq -r '.packages[].name' | \
            awk "/mc-fog/ { print \"-p \" \$1 }" | \
            grep -v mc-fog-ingest | \
            sort > /tmp/test-packages
          split -n "l/$RUNNER_INDEX/$NUM_RUNNERS" /tmp/test-packages | \
            tee /tmp/fog-test-packages

          # Hack: mc-fog-distribution needs bins from
          # mc-util-{keyfile,generate-sample-ledger}.
          # TODO: Replace with artifact deps when that does not require
          # additional cargo flags.
          if grep -q fog-distribution /tmp/fog-test-packages
          then
            echo '-p mc-util-keyfile -p mc-util-generate-sample-ledger' >> /tmp/fog-test-packages
          fi
      - name: Run tests
        uses: ./.github/actions/run-mc-tests
        with:
          # The fog-overseer tests are large and sometimes fail to build;
          # limiting the number of build-jobs helps with that.
          args: $(cat /tmp/fog-test-packages) --build-jobs 4
          junit_xml_filename: junit-fog-tests-${{matrix.runner_index}}.xml
        env:
          # TEST_DATABASE_URL points at the server, as Fog recovery DB tests
          # create and drop PG databases.
          TEST_DATABASE_URL: postgres://postgres@postgres


# via https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
